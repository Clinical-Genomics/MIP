---
# Bash paramters
bash_set_errexit: 0
bash_set_nounset: 0

# Path to conda
conda_dir_path: ~

# Optionally update conda
conda_update: 0

# Disable environment check
disable_env_check: 0

# MIP main environment spec
emip:
  conda:
    bcftools: 1.8
    bioconductor-deseq2: 1.18.1
    bioconductor-tximport:
    fastqc: 0.11.4
    gatk4: 4.0
    gffcompare: 0.10.1
    htslib: 1.8
    java-jdk:
    numpy:
    picard: 2.18
    pip:
    python: 2.7
    r-optparse:
    r-readr:
    salmon: 0.9.1
    sambamba: 0.6.6
    samtools: 1.8
    scipy:
    stringtie: 1.3.4
  shell:
    blobfish:
      conda_dependency:
        bioconductor-deseq2:
        bioconductor-tximport:
        python: 2.7
        r-optparse:
        r-readr:
      version: git
      url: https://github.com/J35P312/BlobFish.git
    bootstrapann:
      conda_dependency:
        numpy:
        pip:
        scipy:
      url: https://github.com/J35P312/BootstrapAnn.git
      version: git
    mip_scripts:
      version: Your current MIP version
    picard:
      version: 2.17.11
## Python 3 environment spec
epy3:
  conda:
    pip:
    python: 3.6
  pip:
    multiqc: 1.4
  shell:
erseqc:
  conda:
    bedops: 2.4.35
    rseqc: 2.6.4
  pip:
  shell:
estar:
  conda:
    fusion-filter: 0.5.0
    star: 2.6
    star-fusion: 1.4.0
    blast: 2.7.1
  pip:
  shell:

# Specify environment names
environment_name:
  emip: MIP_rna
  epy3: MIP_py3
  erseqc: MIP_rseqc
  estar: MIP_star

# Environments and their recipes
installations:
  - emip
  - estar
  - erseqc
  - epy3

# Optional name of log file
log_file: ~

# Skip updating existing packages
noupdate: 0

## Which pipeline are these instructions for
pipeline: rd_rna

# Prefer installation via shell instead of via conda,
# only applicaple for shell programs that overlap with existing conda packages
prefer_shell: 0

## Test that the program is executable and has been added to PATH
program_test_command:
  bcftools:
    execution: 'bcftools --version'
    path: 'bcftools'
  bedops:
    execution: 'bedops --version'
    path: 'bedops'
  bioconductor-deseq2:
    execution: 'R -e "library(DESeq2)"'
    path:
  bioconductor-tximport:
    execution: 'R -e "library(tximport)"'
    path:
  blast:
    execution: 'blastn -version'
    path: 'blastn'
  blobfish:
    execution: 'BlobFish.py'
    path: 'BlobFish.py'
  bootstrapann:
    execution: 'BootstrapAnn.py --help'
    path: 'BootstrapAnn.py'
  cufflinks:
    execution: 
    path: 'cufflinks'
  fastqc:
    execution: 'fastqc --version'
    path: 'fastqc'
  fusion-filter:
    execution:
    path: 'gtf_file_to_feature_seqs.pl'
  gatk4:
    execution: 'gatk'
    path: 'gatk'
  gffcompare:
    execution: 'gffcompare --version'
    path: 'gffcompare'
  htslib:
    execution: 'bgzip --version'
    path: 'bgzip'
  java-jdk:
    execution: 'java -version'
    path: 'java'
  mip_scripts:
    execution: 'mip --help'
    path: 'mip'
  multiqc:
    execution: 'multiqc --version'
    path: 'multiqc'
  numpy:
    execution: 'python -c "import numpy"'
    path:
  picard:
    execution:
    path: 'picard'
  r-optparse:
    execution: 'R -e "library(tximport)"'
    path:
  r-readr:
    execution: 'R -e "library(readr)"'
    path:
  rseqc:
    execution: 'inner_distance.py'
    path: 'inner_distance.py'
  salmon:
    execution: 'salmon --version'
    path: 'salmon'
  sambamba:
    execution: 'sambamba --version'
    path: 'sambamba'
  samtools:
    execution: 'samtools --version'
    path: 'samtools'
  scipy:
    execution: 'python -c "import scipy"'
    path:
  star-fusion:
    execution: 'STAR-Fusion --version'
    path: 'STAR-Fusion'
  star:
    execution: 'STAR'
    path: 'STAR'
  stringtie:
    execution: 'stringtie --version'
    path: 'stringtie'

# Programs that needs to be installed with pyhton 3, only touch if you know what you're doing
python3_programs: []

# Supress output, both when generating the install script and running it
quiet: 0

# Path to directory to which reference genomes are to be downloaded
reference_dir: ~

# Reference genomes to download
reference_genome_versions:
  - GRCh37
  - hg38

## Sbath options
core_number: 1
email:
email_types:
  - FAIL
process_time: 2-00:00:00
project_id:
sbatch_mode: 0
slurm_quality_of_service: low

# Select programs to install, skip the rest
select_programs: []

# Select programs that are to be installed via shell instead of conda
shell_install: []

# Don't write installation instructions for these programs
skip_programs: []

# Path to existing config to update
update_config: ~

# Verbose output when running the generated install script
verbose: 0

# Write config based on template
write_config: ~

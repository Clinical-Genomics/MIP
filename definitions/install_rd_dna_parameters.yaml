---
# Bash paramters
bash_set_errexit: 0
bash_set_nounset: 0

# Path to conda
conda_dir_path: ~

# Optionally update conda
conda_update: 0

# Disable environment check
disable_env_check: 0

# MIP main environment spec
emip:
  conda:
    bcftools: 1.9=h4da6232_0
    bedtools: 2.27.1=he941832_2
    cmake: 3.3.1
    cramtools: 3.0.b127=2
    cutadapt: 1.18=py27_0
    cython: 0.29.1=py27hfc679d8_0
    cyvcf2: 0.10.0=py27h355e19c_0
    gatk: 3.8=5
    gatk4: 4.1.0.0=0
    gcc: 4.8.5
    htslib: 1.9=hc238db4_4
    libstdcxx-ng: 8.2
    ldc: 1.11.0=hb2c9046_0
    manta: 1.5.0=py27_0 
    numpy:
    openssl: 1.0.2p
    picard: 2.18.14=0
    pip:
    plink2: 1.90b3.35
    python: 2.7
    R: 3.3.1 #GATK 3.8.5 req
    rtg-tools: 3.9.1=1
    sambamba: 0.6.8=h682856c_0
    samtools: 1.9=h8ee4bcc_1
    snpeff: 4.3.1t=1
    snpsift: 4.3.1t=1
    svdb: 1.3.0=py27h7eb728f_0
    vcfanno: 0.3.1=0
    vt: 2015.11.10
  pip:
  shell:
    bedtools:
      version: 2.25.0
    mip_scripts:
      version: Your current MIP version
    picard:
      conda_dependency:
        java-jdk:
      version: 2.3.0
    plink2:
      version: 171013
    rhocall:
      path:
      version: 0.4
    sambamba:
      version: 0.6.1
    snpeff:
      snpeff_genome_versions:
        - GRCh37.75
        - GRCh38.86
      version: v4_3t
    svdb:
      conda_dependency:
        cython:
        numpy:
        pip:
        python: 2.7
      version: 1.3.0
    vt:
      version: gitRepo

# CNVnator environment spec
ecnvnator:
  conda:
    bcftools: 1.6
    gcc: 4.8.5
    openssl: 1.0.2p
    pip:
    python: 2.7
    samtools: 1.6
  pip:
  shell:
    cnvnator:
      cnvnator_root_binary: root_v6.06.00.Linux-slc6-x86_64-gcc4.8.tar.gz
      conda_dependency:
        gcc:
      version: 0.3.3

# Delly environment spec
edelly:
  conda:
    bcftools: 1.9=h4da6232_0
    delly: 0.8.1=h4037b6b_0
    openssl: 1.0.2p
    picard: 2.18.14=0
    pip:
    python: 2.7
  pip:
  shell:

# Perl environment spec
eperl_5.26:
  conda:
    bcftools: 1.9=h4da6232_0
    bwa: 0.7.17=ha92aebf_3
    bwakit: 0.7.15=1
    fastqc: 0.11.8=0
    freebayes: 1.2.0=py27h82df9c4_3
    gatk4: 4.1.0.0=0
    ldc: 1.11.0=hb2c9046_0
    openssl: 1.0.2p
    sambamba: 0.6.8=h682856c_0
    samtools: 1.9=h8ee4bcc_1
    pip:
    python: 2.7
  pip:
  shell:

# Peddy environment spec
epeddy:
  conda:
    bcftools: 1.9=h4da6232_0
    openssl: 1.0.2p
    peddy: 0.4.2=py_0
    pip:
    python: 2.7
  pip:
  shell:

# Python 3 environment spec
epy3:
  conda:
    bcftools: 1.9=h4da6232_0
    openssl: 1.0.2p
    ldc: 1.11.0=hb2c9046_0
    pip:
    sambamba: 0.6.8=h682856c_0
  pip:
    chanjo: 4.2.0
    genmod: 3.7.3
    multiqc: 1.6
    stranger: 0.4
    variant_integrity: 0.0.4
  shell:
    expansionhunter:
      conda_dependency:
      version: 3.0.0
    sambamba:
      version: 0.6.1

## Tiddit env spec
etiddit:
  conda:
    bcftools: 1.9=h4da6232_0
    cmake: 3.13.2=h011004d_0
    cython: 0.29.1=py27hfc679d8_0
    cyvcf2: 0.10.0=py27h355e19c_0
    gcc:
    numpy: 1.15.4=py27_blas_openblashb06ca3d_0
    openssl: 1.0.2p
    pip:
    pysam: 0.15.2=py27h1671916_1
    python: 2.7
    scipy: 1.2.0=py27_blas_openblashb06ca3d_200
    svdb: 1.3.0=py27h7eb728f_0
  pip:
  shell:
    svdb:
      conda_dependency:
        cython:
        numpy:
        pip:
        python: 2.7
        scipy:
      version: 1.3.0
    tiddit:
      conda_dependency:
        cmake:
        gcc:
        numpy:
        python: 2.7
      version: 2.5.0
    vcf2cytosure:
      version: 0.4.3

# VEP environment spec
evep:
  conda:
    bcftools: 1.9=h4da6232_0
    openssl: 1.0.2p
    htslib: 1.9=hc238db4_4
    openssl: 1.0.2p
    pip:
    python: 2.7
  pip:
  shell:
    vep:
      conda_dependency:
        bcftools:
        htslib:
      vep_assemblies:
        - GRCh37
        - GRCh38
      vep_auto_flag: acfp
      vep_cache_dir: ~
      vep_plugins:
        - ExACpLI
        - LoFtool
        - MaxEntScan
      vep_species:
        - homo_sapiens_merged
      version: 95

# Specify environment names
environment_name:
  emip: MIP_rare
  ecnvnator:
  edelly:
  epeddy:
  eperl_5.26:
  epy3:
  etiddit:
  evep:

# Environments to install
installations:
  - ecnvnator
  - edelly
  - emip
  - epeddy
  - eperl_5.26
  - epy3
  - evep
  - etiddit

# Optional name of log file
log_file: ~

# Skip updating existing packages
noupdate: 0

## Which pipeline are these instructions for
pipeline: rd_dna

# Prefer installation via shell instead of via conda,
# only applicaple for shell programs that overlap with existing conda packages
prefer_shell: 0

## Program tests
# execution: the command and evaluate exit status, a non-zero exit status will fail the test
# path: the program is executable and has been added to PATH
program_test_command:
  bcftools:
    execution: 'bcftools --version'
    path: 'bcftools'
  bedtools:
    execution: 'bedtools'
    path: 'bedtools'
  bwa:
    execution:
    path: 'bwa'
  bwakit:
    execution:
    path: 'run-bwamem'
  chanjo:
    execution: 'chanjo'
    path: 'chanjo'
  cnvnator:
    execution:
    path: 'cnvnator'
  cramtools:
    execution: 'cramtools'
    path: 'cramtools'
  cutadapt:
    execution: 'cutadapt --version'
    path: 'cutadapt'
  cython:
    execution: 'python -c "import cython"'
    path:
  delly:
    execution: 'delly'
    path: 'delly'
  expansionhunter:
    execution: 'ExpansionHunter --version'
    path: 'ExpansionHunter'
  fastqc:
    execution: 'fastqc --version'
    path: 'fastqc'
  freebayes:
    execution: 'freebayes --version'
    path: 'freebayes'
  gatk4:
    execution: 'gatk'
    path: 'gatk'
  gatk:
    execution: 'gatk3 --version'
    path: 'gatk3'
  genmod:
    execution: 'genmod'
    path: 'genmod'
  htslib:
    execution: 'bgzip --version'
    path: 'bgzip'
  manta:
    execution: 'configManta.py --version'
    path: 'configManta.py'
  mip_scripts:
    execution: 'mip --help'
    path: 'mip'
  multiqc:
    execution: 'multiqc --version'
    path: 'multiqc'
  numpy:
    execution: 'python -c "import numpy"'
    path:
  peddy:
    execution: 'peddy --version'
    path: 'peddy'
  picard:
    execution:
    path: 'picard'
  plink2:
    execution: 'plink2 --version'
    path: 'plink2'
  rhocall:
    execution: 'rhocall'
    path: 'rhocall'
  rtg-tools:
    execution: 'rtg --version'
    path: 'rtg'
  sambamba:
    execution: 'sambamba --version'
    path: 'sambamba'
  samtools:
    execution: 'samtools --version'
    path: 'samtools'
  scipy:
    execution: 'python -c "import scipy"'
    path:
  snpeff:
    execution: 'snpEff -version'
    path: 'snpEff'
  snpsift:
    execution:
    path: 'SnpSift'
  stranger:
    execution: 'stranger --version'
    path: 'stranger'
  svdb:
    execution: 'svdb'
    path: 'svdb'
  tiddit:
    execution: 'TIDDIT.py'
    path: 'TIDDIT.py'
  variant_integrity:
    execution: 'variant_integrity'
    path: 'variant_integrity'
  vcf2cytosure:
    execution: 'vcf2cytosure --version'
    path: 'vcf2cytosure'
  vcfanno:
    execution: 'vcfanno'
    path: 'vcfanno'
  vep:
    execution: 'vep'
    path: 'vep'
  vt:
    execution: 'vt'
    path: 'vt'

# Programs that needs to be installed together with pyhton 3, only touch if you know what you're doing
python3_programs:
  - chanjo
  - genmod
  - variant_integrity
  - multiqc

# Supress output, both when generating the install script and running it
quiet: 0

# Path to directory to which reference genomes are to be downloaded
reference_dir: ~

# Reference genomes to download
reference_genome_versions:
  - GRCh37
  - hg38

## Sbath options
core_number: 1
email:
email_types:
  - FAIL
process_time: 2-00:00:00
project_id:
sbatch_mode: 0
slurm_quality_of_service: low

# Select programs to install, skip the rest
select_programs: []

# Select programs that are to be installed via shell instead of conda
shell_install: []

# Don't write installation instructions for these programs
skip_programs: []

# Path to existing config to update
update_config: ~

# Verbose output when running the generated install script
verbose: 0

# Write config based on template
write_config: ~
